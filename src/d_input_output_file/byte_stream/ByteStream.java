public class ByteStream {
    /**
     * ByteStream_5_2_8
     * Напишите метод, читающий входной поток и вычисляющий контрольную сумму прочитанных данных.
     * Контрольная сумма данных вычисляется по следующему алгоритму:
     * Контрольная сумма представляет собой число типа int. Контрольная сумма пустого набора данных равна нулю.
     * Контрольная сумма непустого набора данных вычисляется по следующей рекуррентной формуле
     *   , где
     *   — контрольная сумма первых n байт данных, rotateLeft — циклический сдвиг бит числа на один бит влево
     *   (чтобы не изобретать велосипед, используйте Integer.rotateLeft),
     *   — n-ный байт данных.
     * Поскольку метод не открывал данный InputStream, то и закрывать его он не должен. Выброшенное из методов
     * InputStream исключение должно выбрасываться из метода.
     * Пример
     * На вход подан InputStream, последовательно возвращающий три байта: 0x33 0x45 0x01. В качестве контрольной
     * суммы должно быть возвращено число 71.
     * @param inputStream
     * @return
     * @throws IOException
     */
    public static int checkSumOfStream(InputStream inputStream) throws IOException {
        int b;
        int crc = 0;
        try {
            while ((b = inputStream.read()) != -1) {
                crc = Integer.rotateLeft(crc, 1) ^ b;
            }
        } catch (IOException e) {
            throw new IOException();
        }
        return crc;
    }
}